For two strings s and t, we say "t divides s" if and only if s = t + t + t + ... + t + t 
(i.e., t is concatenated with itself one or more times).

Given two strings str1 and str2, return the largest string x such that x divides both str1 and str2.

=======================
C++ Solution

class Solution {
public:
    int greatestCommonDivisor(int a, int b){
        if(a==0) return b;
        return greatestCommonDivisor(b%a, a);
    }
    string gcdOfStrings(string str1, string str2) {
        if(str1+str2 == str2+str1) {
            int n = str1.size();
            int m = str2.size();
            int sizeOfSubstr = greatestCommonDivisor(n,m);
            return str1.substr(0,sizeOfSubstr);   
        }
        else return "";
        
    }
};
==================================
C++ has in built gcd function too

class Solution {
public:
    string gcdOfStrings(string str1, string str2) {
        if(str1+str2 == str2 + str1){
            return str1.substr(0, gcd(str1.size(), str2.size()));
        }
        return "";
        
    }
};
