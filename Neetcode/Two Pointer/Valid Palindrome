A phrase is a palindrome if, after converting all uppercase letters into lowercase letters and removing all 
non-alphanumeric characters, it reads the same forward and backward. Alphanumeric characters include letters and numbers.

Given a string s, return true if it is a palindrome, or false otherwise.
Example 1:

Input: s = "A man, a plan, a canal: Panama"
Output: true
Explanation: "amanaplanacanalpanama" is a palindrome.
========================
C++ Solution

class Solution {
public:
    bool isPalindrome(string s) {
        int n = s.size();
        if(n==1) return true;
        int i=0, j=n-1;
        while(i<j){
            if(!isalnum(s[i])){
                i++;
                continue;
            }
            if(!isalnum(s[j])) {
                j--;
                continue;
            }
            if(tolower(s[i]) != tolower(s[j])) return false;

            else{
                i++;
                j--;
            }
        }
        return true;
    }
};
=============================
JAVA Solution

class Solution {
    public boolean isPalindrome(String s) {
        int n = s.length();
        if(n==1 || n==0) return true;
        int i =0; int j=n-1;
        while(i<j){
            char start = s.charAt(i);
            char end = s.charAt(j);
            if(!Character.isLetterOrDigit(start)){
                i++;
                continue;
            }
            if(!Character.isLetterOrDigit(end)){
                j--;
                continue;
            }
            if(Character.toLowerCase(start) != Character.toLowerCase(end)) return false;
            else{
                i++;
                j--;
            }
        }
        return true;
    }
}
