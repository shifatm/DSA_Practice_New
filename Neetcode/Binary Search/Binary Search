Given an array of integers nums which is sorted in ascending order, and an integer target, 
write a function to search target in nums. If target exists, then return its index. Otherwise, return -1.

You must write an algorithm with O(log n) runtime complexity.
===================
C++ Solution

class Solution {
public:
    int search(vector<int>& nums, int target) {
        int n = nums.size();
        if(n==1 && target == nums[0]) return 0;
        if(target < nums[0] || target > nums[n-1]) return -1;
        int start = 0;
        int end = n-1;
        int mid = (start+end+1)/2;
        while(start <= end){
            if(target == nums[mid]){
                return mid;
            }
            else if(target < nums[mid]){
                end = mid-1;
            }
            else if(target>nums[mid]){
                start = mid+1;
            }
            mid = (start+end+1)/2;
        }
        return -1;
    }
};
