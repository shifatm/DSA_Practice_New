Given two strings s and t, return true if t is an anagram of s, and false otherwise.

An Anagram is a word or phrase formed by rearranging the letters of a different word or phrase, 
typically using all the original letters exactly once.
Example 1:

Input: s = "anagram", t = "nagaram"
Output: true
Example 2:

Input: s = "rat", t = "car"
Output: false

==========================
C++ SOLUTION

class Solution {
public:
    bool isAnagram(string s, string t) {
        if(s.length()!= t.length()) return false;
        sort(s.begin(), s.end());
        sort(t.begin(), t.end());
        for(int i=0; i < s.size(); i++){
            if(s[i]!=t[i]){
                return false;
            }
        }
        return true;
    }
};
=========================

JAVA SOLUTION - using Hash Map
class Solution {
    public boolean isAnagram(String s, String t) {
        int l1 = s.length();
        int l2 = t.length();

        if(l1 != l2) return false;
        HashMap<Character, Integer> map = new HashMap<>();
        for(int i = 0; i<l1; i++){
            if(!map.containsKey(s.charAt(i))){
                map.put(s.charAt(i), 1);
            }
            else{
                map.put(s.charAt(i), map.get(s.charAt(i)) + 1);
            }
        }
        for(int i=0; i<l1 ; i++){
            if(!map.containsKey(t.charAt(i))) return false;
            else{
                 map.put(t.charAt(i), map.get(t.charAt(i)) - 1);
            }
        }

        Set<Character> keys = map.keySet();
        for (Character key : keys) {
            if (map.get(key) != 0) {
                return false;
            }
        }
        return true;
    }
}
