Given an array of integers temperatures represents the daily temperatures, 
return an array answer such that answer[i] is the number of days you have to wait after the ith day to get a 
warmer temperature. If there is no future day for which this is possible, keep answer[i] == 0 instead.

 

Example 1:

Input: temperatures = [73,74,75,71,69,72,76,73]
Output: [1,1,4,2,1,1,0,0]

=========================
C++ Solution

class Solution {
public:
    vector<int> dailyTemperatures(vector<int>& temperatures) {
        
        int n = temperatures.size();
        vector<int> result(n,0);
        stack<int> st;
        for(int i=0; i<n; i++){
            while(!st.empty() && temperatures[st.top()] < temperatures[i]){
                int x = st.top();
                st.pop();
                result[x] = i-x;
            }
            st.push(i);
        }
        
        return result;
    }
};

============================
JAVA Solution

class Solution {
    public int[] dailyTemperatures(int[] temperatures) {
        int n = temperatures.length;
        int[] result = new int[n];
        Stack<Integer> st = new Stack<>();
        for(int i = 0; i<n; i++){
            while(!st.empty() && temperatures[st.peek()] < temperatures[i]){
                int x = st.pop();
                result[x] = i-x;
            }
            st.push(i);
        }
        return result;
    }
}
