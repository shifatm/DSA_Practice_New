/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* removeNthFromEnd(ListNode* head, int n) {
        ListNode *temp = head;
        int length = 0;
        while(temp != NULL){
            temp = temp->next;
            length += 1;
        }
        if (n==length){
            ListNode *curr1 = head;
            head = head->next;
            delete(curr1);
            return head;
        }
        int nodeFromFront = length-n;
        ListNode *curr = head;
        int i = 0;
        while(i < nodeFromFront-1){
            curr = curr->next;
            i++;
        }
        ListNode *nodeToDelete = curr->next;
        if(n==1){
            curr->next = NULL;
        }else{
            curr->next = nodeToDelete->next;
        }
        delete(nodeToDelete);
        return head;
    }
};
